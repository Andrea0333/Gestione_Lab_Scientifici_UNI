# Generated by Django 5.2.3 on 2025-06-21 09:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Laboratorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('edificio', models.CharField(max_length=100)),
                ('piano', models.CharField(max_length=10)),
                ('stanza', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Attrezzatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('marca', models.CharField(max_length=100)),
                ('codice_inventario', models.CharField(max_length=50)),
                ('stato', models.CharField(choices=[('funzionante', 'Funzionante'), ('manutenzione', 'In manutenzione'), ('non_disponibile', 'Non disponibile')], default='funzionante', max_length=20)),
                ('laboratorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.laboratorio')),
            ],
        ),
        migrations.CreateModel(
            name='Professore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dipartimento', models.CharField(max_length=100)),
                ('materia', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profilo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ruolo', models.CharField(choices=[('professore', 'Professore'), ('studente', 'Studente'), ('tecnico', 'Tecnico')], max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProgettoSperimentale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titolo', models.CharField(max_length=100)),
                ('descrizione', models.TextField()),
                ('obiettivi', models.TextField()),
                ('data_inizio', models.DateField()),
                ('data_fine', models.DateField()),
                ('responsabile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.professore')),
            ],
        ),
        migrations.CreateModel(
            name='Esperimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titolo', models.CharField(max_length=100)),
                ('descrizione', models.TextField()),
                ('obiettivi', models.TextField()),
                ('materiali', models.TextField()),
                ('data_inizio', models.DateField()),
                ('data_fine', models.DateField()),
                ('progetto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.progettosperimentale')),
            ],
        ),
        migrations.CreateModel(
            name='Studente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corso_laurea', models.CharField(max_length=100)),
                ('anno', models.PositiveIntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tecnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_competenza', models.CharField(max_length=100)),
                ('responsabile_laboratorio', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='laboratorio',
            name='tecnico',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.tecnico'),
        ),
        migrations.CreateModel(
            name='PrenotazioneLaboratorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('ora_inizio', models.TimeField()),
                ('ora_fine', models.TimeField()),
                ('esperimento', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.esperimento')),
                ('laboratorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.laboratorio')),
                ('professore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.professore')),
            ],
            options={
                'unique_together': {('laboratorio', 'data', 'ora_inizio', 'ora_fine')},
            },
        ),
        migrations.CreateModel(
            name='PrenotazioneAttrezzatura',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField()),
                ('ora_inizio', models.TimeField()),
                ('ora_fine', models.TimeField()),
                ('attrezzatura', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.attrezzatura')),
                ('esperimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.esperimento')),
                ('professore', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.professore')),
            ],
            options={
                'unique_together': {('attrezzatura', 'data', 'ora_inizio', 'ora_fine')},
            },
        ),
        migrations.CreateModel(
            name='PrenotazioneProgetto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progetto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.progettosperimentale')),
                ('studente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.studente')),
            ],
            options={
                'unique_together': {('studente', 'progetto')},
            },
        ),
        migrations.CreateModel(
            name='PrenotazioneEsperimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('esperimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.esperimento')),
                ('studente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='GestioneLaboratoriUniversitari.studente')),
            ],
            options={
                'unique_together': {('studente', 'esperimento')},
            },
        ),
    ]
